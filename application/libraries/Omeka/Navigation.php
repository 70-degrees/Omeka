<?php
/**
 * @copyright Roy Rosenzweig Center for History and New Media, 2007-2010
 * @license http://www.gnu.org/licenses/gpl-3.0.txt
 * @package Omeka
 */

/**
 * Customized subclass of Zend Framework's Zend_Navigation class.
 *
 *
 * @package Omeka
 * @copyright Roy Rosenzweig Center for History and New Media, 2007-2010
 */
class Omeka_Navigation extends Zend_Navigation
{   
    /**
     * Creates a new navigation container
     *
     * @param array|Zend_Config $pages    [optional] pages to add
     * @throws Zend_Navigation_Exception  if $pages is invalid
     */
    public function __construct($pages = null)
    {
        parent::__construct($pages);
    }
    
    public function saveAsOption($optionName) 
    {
        set_option($optionName, json_encode($this->toArray()));
    }
    
    public function loadAsOption($optionName) 
    {
        if ($navPages = json_decode(get_option($optionName), true)) {
            $this->setPages($navPages);
        }
    }
    
    /**
     * Adds a pages generated by Omeka plugins and other contributors to the 'public_navigation_main' filter
     *
     * @param array $args    Uses the following keys:
     * 'label' = link label
     * 'uri' = link uri
     * 'active' = whether link is enabled for display or not
     * 'can_delete' = whether or not the link can be deleted or not
     */
    public function addPagesFromFilters() 
    {
        $pageLinks = array();
        $pageLinks = apply_filters('public_navigation_main', $pageLinks);
        foreach($pageLinks as $label => $uri) {
            $this->addPageFromLinkData(array(
                'label'   => $label,
                'uri' => $uri,
                'active' => false,
                'can_delete' => false,
            ));
        }
    }
    
    /**
     * Adds a page based on link data
     *
     * @param array $args    Uses the following keys:
     * 'label' = link label
     * 'uri' = link uri
     * 'active' = whether link is enabled for display or not
     * 'can_delete' = whether or not the link can be deleted or not
     */
    public function addPageFromLinkData($args) 
    {
        // create the page based on the link data contained in $args
        $page = Zend_Navigation_Page::factory($args);
        
        // only add the page to the navigation if it does not already exist in the navigation 
        // according to its unique id
        $pageUid = $this->_createUid($page);
        if (!$this->findBy('uid', $pageUid)) {
            $page->uid = $pageUid;
            $this->addPage($page);
        }
    }
    
    /**
     * Creates a unique id for page, which can be used to determine whether it can be added to the navigaton
     *
     * @param Zend_Navigation_Page $page
     */
    private function _createUid(Zend_Navigation_Page $page) 
    {
        return $page->uri . '|' . $page->label;
    }
}